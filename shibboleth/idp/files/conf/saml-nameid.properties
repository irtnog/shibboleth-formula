{%- from "shibboleth/idp/map.jinja" import shibidp_settings with context -%}
# Properties involving SAML NameIdentifier/NameID generation/consumption

# For the most part these settings only deal with "transient" and "persistent"
# identifiers. See saml-nameid.xml and c14n/subject-c14n.xml for advanced
# settings

# Comment out to disable legacy NameID generation via Attribute Resolver
{%- if shibidp_settings.nameid_saml2_legacy_generator == None %}
#idp.nameid.saml2.legacyGenerator = shibboleth.LegacySAML2NameIDGenerator
{%- else %}
idp.nameid.saml2.legacyGenerator = {{ shibidp_settings.nameid_saml2_legacy_generator }}
{%- endif %}
{%- if shibidp_settings.nameid_saml1_legacy_generator == None %}
#idp.nameid.saml1.legacyGenerator = shibboleth.LegacySAML1NameIdentifierGenerator
{%- else %}
idp.nameid.saml1.legacyGenerator = {{ shibidp_settings.nameid_saml1_legacy_generator }}
{%- endif %}

# Default NameID Formats to use when nothing else is called for.
# Don't change these just to change the Format used for a single SP!
{%- if shibidp_settings.nameid_saml2_default == None %}
#idp.nameid.saml2.default = urn:oasis:names:tc:SAML:2.0:nameid-format:transient
{%- else %}
idp.nameid.saml2.default = {{ shibidp_settings.idp.nameid.saml2.default }}
{%- endif %}
{%- if shibidp_settings.nameid_saml1_default == None %}
#idp.nameid.saml1.default = urn:mace:shibboleth:1.0:nameIdentifier
{%- else %}
idp.nameid.saml1.default = {{ shibidp_settings.nameid_saml1_default }}
{%- endif %}

# Set to shibboleth.StoredTransientIdGenerator for server-side transient ID storage
{%- if shibidp_settings.transient_id_generator == None %}
#idp.transientId.generator = shibboleth.CryptoTransientIdGenerator
{%- else %}
idp.transientId.generator = {{ shibidp_settings.transient_id_generator }}
{%- endif %}

# Persistent IDs can be computed on the fly with a hash, or managed in a database

# For computed IDs, set a source attribute and a secret salt:
{%- if shibidp_settings.persistent_id_source_attribute == None %}
#idp.persistentId.sourceAttribute = changethistosomethingreal
{%- else %}
idp.persistentId.sourceAttribute = {{ shibidp_settings.persistent_id_source_attribute }}
{%- endif %}
{%- if shibidp_settings.persistent_id_use_unfiltered_attributes == None %}
#idp.persistentId.useUnfilteredAttributes = true
{%- else %}
idp.persistentId.useUnfilteredAttributes = {{ shibidp_settings.persistent_id_use_unfiltered_attributes }}
{%- endif %}
# Do *NOT* share the salt with other people, it's like divulging your private key.
{%- if shibidp_settings.persistent_id_algorithm == None %}
#idp.persistentId.algorithm = SHA
{%- else %}
idp.persistentId.algorithm = {{ shibidp_settings.persistent_id_algorithm }}
{%- endif %}
{%- if shibidp_settings.persistent_id_salt == None %}
#idp.persistentId.salt = changethistosomethingrandom
{%- else %}
idp.persistentId.salt = {{ shibidp_settings.persistent_id_salt }}
{%- endif %}

# To use a database, use shibboleth.StoredPersistentIdGenerator
{%- if shibidp_settings.persistent_id_generator == None %}
#idp.persistentId.generator = shibboleth.ComputedPersistentIdGenerator
{%- else %}
idp.persistentId.generator = {{ shibidp_settings.persistent_id_generator }}
{%- endif %}
# For basic use, set this to a JDBC DataSource bean name:
{%- if shibidp_settings.persistent_id_data_source == None %}
#idp.persistentId.dataSource = PersistentIdDataSource
{%- else %}
idp.persistentId.dataSource = {{ shibidp_settings.persistent_id_data_source }}
{%- endif %}
# For advanced use, set to a bean inherited from shibboleth.JDBCPersistentIdStore
{%- if shibidp_settings.persistent_id_store == None %}
#idp.persistentId.store = MyPersistentIdStore
{%- else %}
idp.persistentId.store = {{ shibidp_settings.persistent_id_store }}
{%- endif %}
# Set to an empty property to skip hash-based generation of first stored ID
{%- if shibidp_settings.persistent_id_computed == None %}
#idp.persistentId.computed = shibboleth.ComputedPersistentIdGenerator
{%- else %}
idp.persistentId.computed = {{ shibidp_settings.persistent_id_computed }}
{%- endif %}
